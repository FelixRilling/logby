var logby=function(n){"use strict";const e={NONE:{val:-1},ERROR:{name:"ERROR",val:0},WARN:{name:"WARN",val:1},INFO:{name:"INFO",val:2},DEBUG:{name:"DEBUG",val:3},TRACE:{name:"TRACE",val:4}},t=(n,t,o)=>{let i=console.log;n===e.ERROR?i=console.error:n===e.WARN?i=console.warn:n===e.INFO&&(i=console.info);i(`${(new Date).toISOString()} ${n.name} ${t}`,...o)},o=(n,e)=>typeof n===e,i=n=>null==n,s=n=>o(n,"string"),l=n=>!i(n)&&(o(n,"object")||o(n,"function"));class r{constructor(n,e){this.root=n,this.name=e}log(n,...e){this.root.getLevel().val>=n.val&&this.root.getAppenders().forEach(t=>t(n,this.name,e))}error(...n){this.log(e.ERROR,...n)}warn(...n){this.log(e.WARN,...n)}info(...n){this.log(e.INFO,...n)}debug(...n){this.log(e.DEBUG,...n)}trace(...n){this.log(e.TRACE,...n)}}class a{constructor(){this.loggers=new Map,this.appenders=new Map([["defaultAppender",t]]),this.level=e.INFO}getLogger(n){let e;if(l(n)&&"name"in n)e=n.name;else{if(!s(n))throw new TypeError(`'${n}' is neither an INameable nor a string.`);e=n}if(this.loggers.has(e))return this.loggers.get(e);const t=new r(this,e);return this.loggers.set(e,t),t}getLevel(){return this.level}setLevel(n){this.level=n}attachAppender(n,e){this.appenders.set(n,e)}detachAppender(n){this.appenders.delete(n)}getAppenders(){return this.appenders}}return n.Levels=e,n.Logby=a,n.DEFAULT_APPENDER_NAME="defaultAppender",n.defaultAppenderFn=t,n}({});
//# sourceMappingURL=logby.min.js.map
