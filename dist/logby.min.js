var logby=function(e){"use strict";const t={NONE:{val:-1},ERROR:{name:"ERROR",val:0},WARN:{name:"WARN",val:1},INFO:{name:"INFO",val:2},DEBUG:{name:"DEBUG",val:3},TRACE:{name:"TRACE",val:4}},o=(e,o,r)=>{let n=console.log;o===t.ERROR?n=console.error:o===t.WARN?n=console.warn:o===t.INFO&&(n=console.info),n(((e,t)=>`${(new Date).toISOString()} ${t.name} ${e}`)(e,o),...r)},r=(e,...t)=>t.some(t=>typeof e===t),n=e=>null==e,s=e=>(e=>!n(e)&&r(e,"object"))(e)||(e=>r(e,"function"))(e),l=e=>(e=>r(e,"string"))(e)?e:s(e)&&!n(e.name)?e.name:(e=>r(e,"symbol"))(e)&&!n(e.description)?e.description:null,i=(e,t)=>e.val<=t.val;class a{constructor(e,t){this.root=e,this.name=t}log(e,...t){this.root.level.val>=e.val&&this.root.appenders.forEach(o=>o(this.name,e,t))}error(...e){this.log(t.ERROR,...e)}warn(...e){this.log(t.WARN,...e)}info(...e){this.log(t.INFO,...e)}debug(...e){this.log(t.DEBUG,...e)}trace(...e){this.log(t.TRACE,...e)}isError(){return i(t.ERROR,this.root.level)}isWarn(){return i(t.WARN,this.root.level)}isInfo(){return i(t.INFO,this.root.level)}isDebug(){return i(t.DEBUG,this.root.level)}isTrace(){return i(t.TRACE,this.root.level)}}return e.Levels=t,e.Logby=class{constructor(){this.loggers=new Map,this.appenders=new Set([o]),this.level=t.INFO}getLogger(e){const t=l(e);if(null==t)throw new TypeError(`'${e}' is neither an INameable nor a string.`);if(!this.loggers.has(t)){const e=new a(this,t);this.loggers.set(t,e)}return this.loggers.get(t)}},e.createDelegatingAppender=((e,t=(e=>`${e} (Delegated)`))=>(o,r,n)=>e.getLogger(t(o)).log(r,...n)),e.defaultLoggingAppender=o,e}({});
//# sourceMappingURL=logby.min.js.map
