var logby=function(e){"use strict";const t={NONE:{val:-1},ERROR:{name:"ERROR",val:0},WARN:{name:"WARN",val:1},INFO:{name:"INFO",val:2},DEBUG:{name:"DEBUG",val:3},TRACE:{name:"TRACE",val:4}},n="defaultAppender",s=(e,n,s)=>{let r=console.log;e===t.ERROR?r=console.error:e===t.WARN?r=console.warn:e===t.INFO&&(r=console.info),r(`${(new Date).toISOString()} ${e.name} ${n}`,...s)},r=(e,...t)=>t.some(t=>typeof e===t),o=e=>null==e,l=e=>(e=>!o(e)&&r(e,"object"))(e)||(e=>r(e,"function"))(e),a=e=>(e=>r(e,"string"))(e)?e:l(e)&&!o(e.name)?e.name:(e=>r(e,"symbol"))(e)&&!o(e.description)?e.description:null;class i{constructor(e,t){this.root=e,this.name=t}log(e,...t){this.root.getLevel().val>=e.val&&this.root.getAppenders().forEach(n=>n(e,this.name,t))}error(...e){this.log(t.ERROR,...e)}warn(...e){this.log(t.WARN,...e)}info(...e){this.log(t.INFO,...e)}debug(...e){this.log(t.DEBUG,...e)}trace(...e){this.log(t.TRACE,...e)}}return e.Levels=t,e.Logby=class{constructor(){this.loggers=new Map,this.appenders=new Map([[n,s]]),this.level=t.INFO}getLogger(e){const t=a(e);if(null==t)throw new TypeError(`'${e}' is neither an INameable nor a string.`);if(this.loggers.has(t))return this.loggers.get(t);const n=new i(this,t);return this.loggers.set(t,n),n}getLevel(){return this.level}setLevel(e){this.level=e}attachAppender(e,t){this.appenders.set(e,t)}detachAppender(e){this.appenders.delete(e)}getAppenders(){return this.appenders}},e.DEFAULT_APPENDER_NAME=n,e.defaultAppenderFn=s,e}({});
//# sourceMappingURL=logby.min.js.map
